@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Market.MVC.Models.Items.AddItemVM

@{
    Layout = "_Layout";
}

<main role="main">
        <div class="wrapper">
            <div class="breadcrumb-wrap">
                <div class="container py-3">
                    <div class="row d-flex justify-content-md-between justify-content-sm-center">
                        <div class="col-md-4">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb mb-0">
                                    <li class="breadcrumb-item ml-1 font-weight-bold active" aria-current="page">
                                        Add New Item
                                    </li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>


            <div class="container">
                <div class="row">
                    <partial name="_ProfileSidebar" />
                    <div class="col-lg-9">
                        <div class="row">
                            <div class="col">
                                <div class="card mb-5">
                                    <div class="card-header border-bottom">
                                        <div class="d-flex align-items-center">
                                            <div>
                                                <h6 class="card-title mb-0">Add New Item</h6>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <form class="col-lg-8" method="post" asp-controller="Items" asp-action="Create" enctype="multipart/form-data">
                                                <div class="row">
                                                    <div class="col-lg-6">
                                                        <div class="form-group">
                                                            <label for="l301">Title</label>
                                                            <input type="text" class="form-control" name="@nameof(Model.Title)" required />
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6">
                                                        <div class="form-group">
                                                            <label for="l302">Subtitle</label>
                                                            <input type="text" class="form-control" name="@nameof(Model.Subtitle)" id="l302" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="form-control-label" for="productType">Category</label>
                                                    <select class="form-control" id="productType" name="ProductType" required>
                                                        <option value="">-- Select category --</option>
                                                        <option value="WebTemplates">Web Templates</option>
                                                        <option value="Graphics">Graphics</option>
                                                        <option value="Fonts">Fonts</option>
                                                    </select>
                                                </div>
                                                <div class="form-group">
                                                    <label class="form-control-label" for="l15">Short Description</label>
                                                    <textarea class="form-control" name="@nameof(Model.ShortDescription)" rows="3" id="l15"></textarea>
                                                </div>
                                                <div class="form-group">
                                                    <label class="form-control-label" for="l151">Full Description</label>
                                                    <textarea class="form-control" name="@nameof(Model.Text)" rows="3" id="l151" required></textarea>
                                                </div>
                                                <br />

                                                <h4 class="text-black mb-3">Pricing</h4>
                                                <div class="row">
                                                    <div class="col-lg-6">
                                                        <div class="form-group">
                                                            <label for="l30">Total Price</label>
                                                            <input type="text" class="form-control" name="@nameof(Model.Price)" required />
                                                        </div>
                                                    </div>
                                                </div>
                                                <br />

                                                <h4 class="mt-4 mb-3">Upload cover images (up to 5)</h4>
                                                <div class="input-group mb-3">
                                                    <div class="custom-file">
                                                        <input type="file" class="custom-file-input" id="coverImages" name="@nameof(Model.CoverImage)" accept="image/*" multiple onchange="previewCoverImages(this)" />
                                                        <label class="custom-file-label" for="coverImages">Choose files</label>
                                                    </div>
                                                </div>
                                                <div id="coverImagesPreview" class="mb-3">
                                                    <div class="row" id="coverImagesList"></div>
                                                </div>

                                                <h4 class="mt-4 mb-3">Upload additional files (up to 10)</h4>
                                                <div class="input-group mb-3">
                                                    <div class="custom-file">
                                                        <input type="file" class="custom-file-input" id="additionalFiles" name="@nameof(Model.AdditionalFiles)" multiple onchange="updateFileList(this)" />
                                                        <label class="custom-file-label" for="additionalFiles">Choose files</label>
                                                    </div>
                                                </div>
                                                <div id="fileList" class="mb-3">
                                                    <ul class="list-group" id="selectedFiles"></ul>
                                                </div>

                                                <div class="form-actions my-4">
                                                    <button type="submit" class="btn btn-primary width-150">
                                                        Save Product
                                                    </button>
                                                    <button type="button" class="btn btn-danger">Cancel</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </main>

@section Scripts {
    <script>
        function previewCoverImages(input) {
            const previewContainer = document.getElementById('coverImagesList');
            const label = input.nextElementSibling;
            
            previewContainer.innerHTML = '';
            
            if (input.files.length > 0) {
                label.textContent = `${input.files.length} file(s) selected`;
                
                Array.from(input.files).forEach((file, index) => {
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        
                        reader.onload = function(e) {
                            const col = document.createElement('div');
                            col.className = 'col-md-4 mb-3';
                            
                            const card = document.createElement('div');
                            card.className = 'card';
                            
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            img.className = 'card-img-top';
                            img.style.height = '200px';
                            img.style.objectFit = 'cover';
                            
                            const cardBody = document.createElement('div');
                            cardBody.className = 'card-body p-2';
                            
                            const removeButton = document.createElement('button');
                            removeButton.className = 'btn btn-danger btn-sm w-100';
                            removeButton.textContent = 'Удалить';
                            removeButton.onclick = function() {
                                const dt = new DataTransfer();
                                const files = input.files;
                                
                                for (let i = 0; i < files.length; i++) {
                                    if (i !== index) {
                                        dt.items.add(files[i]);
                                    }
                                }
                                
                                input.files = dt.files;
                                previewCoverImages(input);
                            };
                            
                            cardBody.appendChild(removeButton);
                            card.appendChild(img);
                            card.appendChild(cardBody);
                            col.appendChild(card);
                            previewContainer.appendChild(col);
                        }
                        
                        reader.readAsDataURL(file);
                    }
                });
            } else {
                label.textContent = 'Choose files';
            }
        }

        function updateFileList(input) {
            const fileList = document.getElementById('selectedFiles');
            const label = input.nextElementSibling;
            
            fileList.innerHTML = '';
            
            if (input.files.length > 0) {
                label.textContent = `${input.files.length} file(s) selected`;
                
                Array.from(input.files).forEach((file, index) => {
                    const li = document.createElement('li');
                    li.className = 'list-group-item d-flex justify-content-between align-items-center';
                    
                    const fileInfo = document.createElement('span');
                    fileInfo.textContent = `${file.name} (${(file.size / 1024).toFixed(2)} KB)`;
                    
                    const removeButton = document.createElement('button');
                    removeButton.className = 'btn btn-danger btn-sm';
                    removeButton.textContent = 'Удалить';
                    removeButton.onclick = function() {
                        const dt = new DataTransfer();
                        const files = input.files;
                        
                        for (let i = 0; i < files.length; i++) {
                            if (i !== index) {
                                dt.items.add(files[i]);
                            }
                        }
                        
                        input.files = dt.files;
                        updateFileList(input);
                    };
                    
                    li.appendChild(fileInfo);
                    li.appendChild(removeButton);
                    fileList.appendChild(li);
                });
            } else {
                label.textContent = 'Choose files';
            }
        }
    </script>
}
