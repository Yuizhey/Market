@model Market.MVC.Models.Items.SingleItemVM

<main role="main">
        <div class="wrapper">
            <div class="breadcrumb-wrap">
                <div class="container py-3">
                    <div class="row d-flex justify-content-md-between justify-content-sm-center">
                        <div class="col-md-4">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb mb-0">
                                </ol>
                            </nav>
                        </div>
                        <div class="header-actions">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <button class="btn btn-ghost grey-dark like-button font-weight-bold" onclick="toggleLike('@Model.Id')">
                                    <i class="las la-hand-holding-heart @(Model.IsLiked ? "text-danger" : "")"></i>
                                    <span>@Model.LikesCount Likes</span>
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-ghost grey-dark like-button font-weight-bold" disabled>
                                    <i class="las la-hand-holding-heart"></i>
                                    <span>@Model.LikesCount Likes</span>
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <section>
                <div class="container">
                    <div class="row">
                        <div class="col-md-7 col-lg-9">
                            <div class="product-info">
                                <!-- Item Img Slider -->
                                <div class="swiper-container rounded border">
                                    <div class="swiper-wrapper">
                                        <div class="swiper-slide">
                                            <img src="@Model.ImageURL" alt="" class="img-fluid">
                                        </div>
                                    </div>
                                    <!-- Add Pagination -->
                                    <div class="swiper-pagination"></div>
                                </div>
                            </div>
                            <div class="product-description-text pr-lg-2">
                                <h1 class="mt-4 mb-4">
                                    @Model.Title
                                </h1>
                                @if (!string.IsNullOrEmpty(Model.Subtitle))
                                {
                                    <p class="lead">
                                        @Model.Subtitle
                                    </p>
                                }
                                <div class="row">
                                    <div class="col-sm-8">
                                        @if (!string.IsNullOrEmpty(Model.ShortDescription))
                                        {
                                            <h6 class="mb-2">Short description</h6>
                                            <p>
                                                @Model.ShortDescription
                                            </p>
                                        }
                                        @if (!string.IsNullOrEmpty(Model.Text))
                                        {
                                            <h6 class="mb-2">Full description</h6>
                                            <p>
                                                @Model.Text
                                            </p>
                                        }
                                    </div>
                                </div>
                                <div class="row mb-4 d-flex justify-content-between">
                                    <div class="col-md-8">
                                        <h6 class="mb-2">Frequently asked questions</h6>
                                        <p>
                                            For anything else (licensing, billing, etc), please visit our
                                            <a asp-controller="Contact" asp-action="Index" class="btn btn-link">Help Center</a>.
                                        </p>
                                    </div>
                                    <div class="col-md-4">
                                        <a asp-controller="Contact" asp-action="Index" class="btn btn-link float-right"><i class="las la-envelope mr-1"></i>Need additional help?
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <hr />
                        </div>
                        <!-- edn: Col 9 -->
                        <div class="col-md-5 col-lg-3">
                            <div class="sidebar sticky-lg-top sticky-md-top">
                                <div class="sidebar-widget">
                                    <h3 class="mb-4">@Model.Title</h3>
                                    <div class="row d-flex justify-content-between align-items-center">
                                        <div class="col-md-4">
                                            <div class="form-group text-md-right text-sm-center">
                                                <h2 class="item-widget-price">$@Model.Price</h2>
                                            </div>
                                        </div>
                                    </div>
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <button class="btn btn-primary btn-block" type="button" onclick="addToCart('@Model.Id')">
                                            Add to cart → <span class="price"> $@Model.Price</span>
                                        </button>
                                    }
                                    else
                                    {
                                        <a asp-controller="Auth" asp-action="Login" class="btn btn-primary btn-block">
                                            Login to buy
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </main>

@section Scripts {
    <script>
        async function addToCart(productId) {
            try {
                const response = await fetch(`/Cart/AddItemToCart/${productId}`, {
                    method: 'POST'
                });

                const responseText = await response.text();
                
                if (response.ok) {
                    alert("Товар добавлен в корзину!");
                } else {
                    // Извлекаем только сообщение об ошибке до первого переноса строки и убираем System.InvalidOperationException
                    const errorMessage = responseText.split('\n')[0].replace('System.InvalidOperationException: ', '');
                    alert(errorMessage);
                }
            } catch (error) {
                console.error("Ошибка при добавлении в корзину:", error);
                alert("Произошла ошибка при добавлении товара в корзину.");
            }
        }

        async function toggleLike(productId) {
            try {
                const response = await fetch(`/Like/Toggle/${productId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    const icon = document.querySelector('.like-button i');
                    icon.classList.toggle('text-danger');
                    const likesCount = document.querySelector('.like-button span');
                    const currentCount = parseInt(likesCount.textContent);
                    likesCount.textContent = `${currentCount + (icon.classList.contains('text-danger') ? 1 : -1)} Likes`;
                } else {
                    const err = await response.text();
                    alert("Ошибка: " + err);
                }
            } catch (error) {
                console.error("Ошибка при лайке:", error);
                alert("Произошла ошибка.");
            }
        }
    </script>
}