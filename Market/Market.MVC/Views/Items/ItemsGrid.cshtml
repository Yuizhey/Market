@model Market.MVC.Models.Items.ItemsVM

<main role="main">
    <div class="wrapper">
        <div class="container">
            <div class="row">
                <div class="col-md-5 col-lg-3">
                    <!-- edit in partials -->
                    <partial name="_ItemsSidebar"/>
                </div>

                <div class="col-md-7 col-lg-9">
                    <div class="row">
                        <div class="col-md-12">
                            <!-- edit in partials -->
                            <header class="mb-3">
                                <div class="form-inline">
                                    <strong class="mr-md-auto">Items found </strong>
                                    <div class="btn-group">
                                        <a asp-controller="Items" asp-action="Index" asp-route-type="list" class="btn btn-white" data-toggle="tooltip" title="" data-original-title="List view">
                                            <i class="las la-list"></i></a>
                                    </div>
                                </div>
                            </header>
                        </div>
                    </div>
                    <div class="row">
                        @foreach (var product in Model.Products)
                        { 
                            <div class="col-md-4">
                                <!-- edit in partials -->
                                <div class="card item-card h-100 border-0">
                                    <div class="item-card__image rounded">
                                        <a asp-controller="Items" asp-action="Details" asp-route-id="@product.Id">
                                            <img src="@product.ImageURL" class="img-fluid rounded" alt="">
                                        </a>
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <div class="hover-icons">
                                                <ul class="list-unstyled">
                                                    <li onclick="toggleLike('@product.Id')">
                                                        <a href="#" class="@(product.IsLiked ? "text-danger" : "")" data-product-id="@product.Id" data-toggle="tooltip" title="Лайк">
                                                            <i class="las la-hand-holding-heart"></i>
                                                        </a>
                                                    </li>
                                                    <li onclick="addToCart('@product.Id')"><a href="#" data-toggle="tooltip" data-placement="left" title="Bookmark"><i class="las la-shopping-cart"></i></a></li>
                                                </ul>
                                            </div>
                                        }
                                    </div>
                                    <!-- end: Item card image -->
                                    <div class="card-body px-0 pt-3">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="item-title">
                                                <a href="#">
                                                    <h3 class="h5 mb-0 text-truncate">@product.Title</h3>
                                                </a>
                                            </div>
                                            <div class="item-price">
                                                <span>$@product.Price</span>
                                            </div>
                                        </div>
                                        <!-- end: Card info -->
                                        <div class="d-flex justify-content-between align-items-center item-meta">
                                            <div class="short-description mb-0">
                                                <p class="mb-0 extension-text"><a href="#">UI Kit</a><span class="ml-1">in</span> <a href="#">Corporate</a> </p>
                                            </div>
                                        </div>
                                        <!-- end: Card meta -->
                                    </div>
                                    <!-- edn:Card body -->
                                </div>
                                <!-- end: Card -->
                            </div>
                        }
                    </div>
                    <hr class="divider divider-fade" />
                    <!-- edit in partials -->
                    <nav aria-label="pagin">
                        <ul class="pagination pagination-sm">
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" asp-controller="Items" asp-action="Index" asp-route-page="@i" asp-route-type="grid">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>

    </div>
</main>

@section Scripts {
    <script>
        async function addToCart(productId) {
            try {
                const response = await fetch(`/Cart/AddItemToCart/${productId}`, {
                    method: 'POST'
                });

                const responseText = await response.text();
                
                if (response.ok) {
                    alert("Товар добавлен в корзину!");
                } else {
                    // Извлекаем только сообщение об ошибке до первого переноса строки и убираем System.InvalidOperationException
                    const errorMessage = responseText.split('\n')[0].replace('System.InvalidOperationException: ', '');
                    alert(errorMessage);
                }
            } catch (error) {
                console.error("Ошибка при добавлении в корзину:", error);
                alert("Произошла ошибка при добавлении товара в корзину.");
            }
        }

        async function toggleLike(productId) {
            try {
                const response = await fetch(`/Like/Toggle/${productId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    const icon = document.querySelector(`[data-product-id='${productId}'] i`);
                    icon.classList.toggle('text-danger');
                } else {
                    const err = await response.text();
                    alert("Ошибка: " + err);
                }
            } catch (error) {
                console.error("Ошибка при лайке:", error);
                alert("Произошла ошибка.");
            }
        }
    </script>
}
